{
      "name": "Eternal Flame",
      "date": "2025-08-14",
      "code": "#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nuniform vec2 resolution;\nuniform float time;\n\nvec3 rotateVec3(vec3 v, float yaw, float pitch) {\n  float cy = cos(yaw);\n  float sy = sin(yaw);\n  vec3 yawRotated = vec3(\n    cy * v.x - sy * v.z,\n    v.y,\n    sy * v.x + cy * v.z\n  );\n\n  float cp = cos(pitch);\n  float sp = sin(pitch);\n  vec3 pitchRotated = vec3(\n    yawRotated.x,\n    cp * yawRotated.y - sp * yawRotated.z,\n    sp * yawRotated.y + cp * yawRotated.z\n  );\n\n  return pitchRotated;\n}\n\nvec2 rotateVec(vec2 v, float b) {\n    return vec2(cos(b) * v.x + sin(b) * v.y, cos(b) * v.y - sin(b) * v.x);\n}\n\nvoid main(void) {\n    vec3 color = vec3(0.0);\n    \n    for(float c = 0.; c < 3.; c += 1.) {\n      vec3 uv = vec3((gl_FragCoord.xy - resolution.xy/2.) / 300., 1.);\n      float t = time / 10. + 1.;\n      float ci = ((c+10.)/20.);\n      for(float i = 0.; i < 5.; i += 1.) {\n          vec3 v = rotateVec3(uv, t, -t*2.634 + c/10.);\n      \tuv = rotateVec3(vec3(dot(v, uv), cross(v, uv)), t, i * 10.);\n      }\n      \n      // Use conditional assignment instead of array indexing\n      float intensity = 1. / length(uv);\n      if (c < 0.5) {\n      \tcolor.r = intensity;\n      } else if (c < 1.5) {\n      \tcolor.g = intensity;\n      } else {\n      \tcolor.b = intensity;\n      }\n    }\n    \n    gl_FragColor = vec4(color, 1.0);\n}"
    }