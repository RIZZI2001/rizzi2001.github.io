{
      "name": "Rizzi",
      "date": "2025-06-18",
      "code": "#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nuniform vec2 resolution;\nuniform sampler2D rizzi;///min:n;mag:n;s:c;t:c;\nuniform float time;\n\nconst int octaves = 2;\nconst float lacunarity = 0.3;\nconst float persistance = 0.5;\n\nvec3 rotateVec3(vec3 v, float yaw, float pitch) {\n    float cy = cos(yaw);\n    float sy = sin(yaw);\n    vec3 yawRotated = vec3(\n        cy * v.x - sy * v.z,\n        v.y,\n        sy * v.x + cy * v.z\n    );\n\n    float cp = cos(pitch);\n    float sp = sin(pitch);\n    vec3 pitchRotated = vec3(\n        yawRotated.x,\n        cp * yawRotated.y - sp * yawRotated.z,\n        sp * yawRotated.y + cp * yawRotated.z\n    );\n\n    return pitchRotated;\n}\n\nfloat rand(vec3 n) {return fract(sin(dot(n, vec3(12.9898, 4.1414, 7.8931))) * 43758.5453);}\nfloat noize3d(vec3 pos) {\n\treturn\n\tmix(\n\t  mix(\n\t  \tmix(rand(floor(pos)),rand(vec3(ceil(pos.x), floor(pos.yz))),fract(pos.x)),\n  \t  mix(rand(vec3(floor(pos.x), ceil(pos.y), floor(pos.z))),rand(vec3(ceil(pos.xy), floor(pos.z))),fract(pos.x)),\n  \t\tfract(pos.y)\n  \t), mix(\n\t  \tmix(rand(vec3(floor(pos.xy), ceil(pos.z))),rand(vec3(ceil(pos.x), floor(pos.y), ceil(pos.z))),fract(pos.x)),\n\t  \tmix(rand(vec3(floor(pos.x), ceil(pos.yz))),rand(vec3(ceil(pos))),fract(pos.x)),\n\t  \tfract(pos.y)\n  \t),\n  \tfract(pos.z)\n  );\n}\n\nfloat layeredNoize3d(vec3 pos) {\n\tpos = rotateVec3(pos, 2.4, 1.7);\n\tfloat layered = 0.0;\n\tfor(int layer = 1; layer <= octaves; layer ++) {\n    layered += noize3d(pos) * pow(persistance, float(layer));\n    pos = rotateVec3(pos/lacunarity, 2.4, 1.7);\n\t}\n\treturn layered;\n}\n\nvec2 rotateVec(vec2 v, float b) {\n\treturn vec2(cos(b) * v.x + sin(b) * v.y, cos(b) * v.y - sin(b) * v.x);\n}\n\nvec4 tex_at(vec2 pos) {\n\tfloat size = 0.8;\n\tpos = (pos - resolution/2.)/resolution.x / size + vec2(0.5);\n\treturn texture2D(rizzi, pos);\n}\n\nfloat depth(vec2 pos) {\n\tfor(float i = 0.; i < 5.; i++) {\n\t\tfloat lv = layeredNoize3d(vec3(pos/40., time));\n\t\tpos += rotateVec(vec2((15. * i) + 10.), lv * 10. + time + pos.x / 160. + pos. y / 160.);\n\t\tif(tex_at(pos).r > 0.5) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn 5.;\n}\n\nvec4 color(float i) {\n\tif(i == 0.) {\n\t\treturn vec4(1.);\n\t} else if(i == 1.) {\n\t\treturn vec4(255, 114, 199, 1)/ 255.;\n  } else if(i == 2.) {\n  \treturn vec4(228, 0, 240, 1)/ 255.;\n  } else if(i == 3.) {\n  \treturn vec4(156, 36, 248, 1)/ 255.;\n  } else if(i == 4.) {\n  \treturn vec4(91, 3, 255, 1)/ 255.;\n\t} else {\n\t\treturn vec4(0.);\n\t}\n}\n\nvoid main(void) {\n\tgl_FragColor = color(depth(gl_FragCoord.xy));\n}"
    }